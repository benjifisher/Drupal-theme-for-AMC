/**
 * @file
 * Positioning for responsive layout .
 *
 * Define CSS classes to create a table-free, 3-column, 2-column, or single
 * column layout depending on whether blocks are enabled in the left or right
 * columns.
 *
 * This layout uses the Zen Grids plugin for Compass: http://zengrids.com
 */

@import "base";


// We are going to create a 980px wide, 5 column grid with 20px gutters between
// columns (applied as 10px of left/right padding on each column).
$zen-column-count:  5;
$zen-gutter-width:  0px;


// IE6-7 don't support box-sizing: border-box. We can fix this in 1 of 3 ways:
// - Drop support for IE 6/7. :-) In the _base.scss, set $legacy-support-for-ie6
//   and $legacy-support-for-ie7 to false.
// - (Preferred) Install the box-sizing polyfill and set the variable below to
//   the absolute path URL to the boxsizing.htc file.
//   @see https://github.com/Schepp/box-sizing-polyfill
//   $box-sizing-polyfill-path: "/path/to/boxsizing.htc";
// - Use the same CSS unit for grid width and gutter width (use px for both or
//   use % for both, etc.) and set the box-sizing variable to content-box.
//   $zen-box-sizing: content-box;


// You can generate more efficient CSS if you manually apply the
// zen-grid-item-base mixin to all grid items from within a single ruleset.
$zen-auto-include-item-base: false;
// $zen-auto-include-flow-item-base: false;


/*
 * Center the page.
 */

#page,
.region-bottom {
  /* For screen sizes larger than 1200px, prevent excessively long lines of text
     by setting a max-width. */
  margin-left: auto;
  margin-right: auto;
  max-width: 1200px;
}

/*
 * Apply the shared properties of grid items in a single, efficient ruleset.
 */
// See the note about $zen-auto-include-item-base above.

#header,
#content,
#banner,
#navigation,
.region-sidebar-first,
.region-sidebar-second,
#footer {
  @include zen-grid-item-base();
}

/*
 * Containers for grid items and flow items.
 */

#header,
#main,
#footer {
  @include zen-grid-container();
}

/*
 * Make #header relative so that #navigation can be positioned inside it.
 */
#header {
  position: relative;
}

/* Introduce white space around the right sidebar and blocks in the main
 * content area.
 */
#secondary {
  background-color: #ffffff;
}
#content {
  padding: 0 2em;
}
.region-sidebar-second {
  padding-right: 2.5em;
  padding-left: 2.5em;
}

/*
 * The site name should appear on top of the banner photo. For medium and wide
 * screens, the #banner will float left and #name-and-slogan will be positioned
 * relative to it. For narrow screen sizes, declare #banner to be relative.
 * Adjust the font size so that the site name fits reasonably well.
 */

/* Default, for narrow screens. */
#name-and-slogan {
  position: absolute;
  bottom: 2em;
  right: 2em;
  font-size: 1.2em;
}
#banner {
  position: relative;
}

/* Wide screens. */
@media all and (min-width: 960px) {
  #name-and-slogan {
    font-size: 2em;
  }
}

@media all and (min-width: 480px) {
  .region-sidebar-second {
    padding-left: 0em;
  }

  #main {
    /* padding-top: 3em; Move all the children of #main down to make room. */
    position: relative;
  }
}

@media all and (min-width: 480px) and (max-width: 959px) {

  /*
   * Use 6 grid columns for smaller screens.
   */
  $zen-column-count: 6;

  /*
   * The layout when there is only one sidebar, the left one.
   */

  .sidebar-first {

    .region-sidebar-first { /* Span 1 column, starting in 1st column from left. */
      @include zen-grid-item(2, 1);
    }

    #secondary {
      @include zen-grid-item(4, 3);
      @include zen-nested-container();
    }

    #banner {
      @include zen-grid-item($zen-column-count, 1);
    }

    #content { /* Span 2 columns, starting in 2nd column from left. */
      @include zen-clear();
      @include zen-grid-item($zen-column-count, 1);
    }
  }

  /*
   * The layout when there is only one sidebar, the right one.
   */

  .sidebar-second {
    #banner {
      @include zen-grid-item($zen-column-count, 1);
    }
    #content {
      @include zen-clear();
      @include zen-grid-item(4, 1);
    }

    .region-sidebar-second {
      @include zen-grid-item(2, 5);
    }
  }

  /*
   * The layout when there are two sidebars.
   */

  .two-sidebars {

    .region-sidebar-first {
      @include zen-grid-item(2, 1);
    }

    #secondary {
      @include zen-grid-item(4, 3);
      @include zen-nested-container();
    }

    #banner {
      @include zen-grid-item($zen-column-count, 1);
    }

    #content {
      @include zen-clear();
      @include zen-grid-item($zen-column-count, 1);
    }

    .region-sidebar-second { /* Start a new row and span all 6 columns. */
      @include zen-grid-item($zen-column-count, 1);
      // We are making every block in this region be a grid item.
      @include zen-nested-container();
      @include zen-clear();
      padding-left: 2.5em;
      padding-right: 2.5em;

      .block {
        @include zen-grid-item-base();
      }
      .block:nth-child(2n+1) { /* Span 3 columns, starting in the 1st column from left. */
        @include zen-grid-item(3, 1);
        @include zen-clear();
      }
      .block:nth-child(2n) { /* Span 3 columns, starting in the 2nd column from left. */
        @include zen-grid-item(3, 4);
      }
    }
  }
}

@media all and (min-width: 960px) {
  #navigation {
    width: 66%;
    max-width: 800px;
    min-width: 560px;
  }

  /*
   * Use 9 grid columns for larger screens.
   * Why use the same column count for all three layouts?
   */
  $zen-column-count: 9;

  /*
   * The layout when there is only one sidebar, the left one.
   */

  .sidebar-first {

    /* Span 2 columns, starting in 1st column from left. */
    .region-sidebar-first {
      @include zen-grid-item(2, 1);
    }

    #secondary {
      @include zen-grid-item(7, 3);
      @include zen-nested-container();
    }

    #banner {
      @include zen-grid-item($zen-column-count, 1);
    }

    #content {
      @include zen-grid-item($zen-column-count, 1);
      @include zen-clear();
    }

  }

  /*
   * The layout when there is only one sidebar, the right one.
   */

  .sidebar-second {
    #banner {
      @include zen-grid-item($zen-column-count, 1);
    }

    #content {
      @include zen-clear();
      @include zen-grid-item(7, 1);
    }

    .region-sidebar-second {
      @include zen-grid-item(2, 8);
    }
  }

  /*
   * The layout when there are two sidebars.
   */

  .two-sidebars {

    .region-sidebar-first {
      @include zen-grid-item(2, 1);
    }

    #secondary {
      @include zen-grid-item(7, 3);
      @include zen-nested-container();
    }

    #banner {
      @include zen-grid-item($zen-column-count, 1);
    }

    #content {
      @include zen-clear();
      @include zen-grid-item(7, 1);
    }

    .region-sidebar-second {
      @include zen-grid-item(2, 8);
    }

  }
}
